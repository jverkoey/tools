#!/bin/bash
#
# Copyright 2016-present The Material Motion Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

parentcmd=$(basename "${BASH_SOURCE[1]}")
cmd=$(basename "${BASH_SOURCE[0]}")

usage() {
  $parentcmd help $cmd
}

list_all() {
  echo "${B}Available large-scale changes:${N}"
  echo
  for path in $ROOT_DIR/lsc/*; do
    echo "    $parentcmd $cmd run $(basename $path)"
  done
  echo
}

if [ -z "$1" ]; then
  list_all
  exit 1
fi

repos_for_lsc() {
  command="$1"
  command_path="$ROOT_DIR/lsc/$lsc"

  if [ -f "$command_path/filter" ]; then
    mdm gh repo -O material-motion -l | grep / | "$command_path/filter"
  else
    mdm gh repo -O material-motion -l | grep /
  fi
}

run_lsc() {
  if [ -z "$1" ]; then
    usage
    exit 1
  fi

  command="$1"
  command_path="$ROOT_DIR/lsc/$command"

  if [ ! -d "$command_path" ]; then
    echo "No large-scale change found at $command_path"
    echo "Please create a directory by running the following command:"
    echo
    # TODO: This should be a yeoman generator.
    echo "    mkdir -p $command_path"
    echo
    exit 1
  fi

  echo "Starting large-scale change..."

  repos_path="$command_path/repos"
  mkdir -p "$repos_path"

  for repo in $(repos_for_lsc $command); do
    repo_path="$repos_path/$repo"

    echo
    echo "${B}$repo${N}..."
    read -r -p "Continue? [y/N] " response
    case $response in
      [yY][eE][sS]|[yY]) ;;
      *) continue ;;
    esac

    if [ ! -d "$repo_path" ]; then
      echo "${B}Cloning${N}..."
      git clone --recursive "git@github.com:$repo.git" "$repo_path"
    fi

    cd "$repo_path"
    echo "${B}Running${N}..."
    "$command_path/work" "$repo" || { echo "Failed on work."; continue; }
  done
}

preview_lsc() {
  if [ -z "$1" ]; then
    usage
    exit 1
  fi

  command="$1"
  command_path="$ROOT_DIR/lsc/$command"

  if [ ! -d "$command_path" ]; then
    usage
    exit 1
  fi

  echo "${B}$command${N} will be run for the following repositories:"
  repos_for_lsc $command
}

case "$1" in
  run)      run_lsc ${@:2} ;;
  preview)  preview_lsc ${@:2} ;;
  *)        usage ;;
esac
