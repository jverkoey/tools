#!/bin/bash -e
#
# Copyright 2016-present The Material Motion Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

find_path() {
  short_reponame=${1#material-motion-}
  full_reponame="material-motion-$short_reponame"
  parent_dir="$(dirname $ROOT_DIR)"

  # Look for exact exact_matches.
  suffixes=("" "-android" "-objc" "-swift" "-js")
  matches=()
  for suffix in "${suffixes[@]}"; do
    if [ -d "$parent_dir/$full_reponame$suffix" ]; then
      matches+=("$parent_dir/$full_reponame$suffix")
    elif [ -d "$parent_dir/$short_reponame$suffix" ]; then
      matches+=("$parent_dir/$short_reponame$suffix")
    fi
  done

  exact_matches=$( IFS=$'\n'; echo "${matches[*]}" )
  _print_matches "$exact_matches"

  # Look for acronyms.
  word="[a-zA-Z]*"
  regex="" # Turns "rma" into ".*/r$word-m$word-a$word.*"
  while read -r -n1 char; do
    if [ -z "$regex" ]; then
      regex=".*/$char$word"
    else
      regex="$regex-$char$word"
    fi
  done < <(echo -n "$short_reponame")
  regex="$regex.*"

  acro_matches=$(find "$parent_dir" -maxdepth 1 -type d -regex "$regex")
  _print_matches "$acro_matches"

  # Look for fuzzy matches.
  fuzzy_matches=$(find "$parent_dir" -maxdepth 1 -type d -name "*"$short_reponame"*")
  _print_matches "$fuzzy_matches"

  # Failed to find any matches.
  echo "No matches found." >&2
  exit 1
}

_print_matches() {
  matches="$1"
  count=$(echo "$matches" | sed '/^\s*$/d' | wc -l) # Count non-empty lines.

  if [ "$count" -eq "1" ]; then
    echo "$matches"
    exit 0
  elif [ "$count" -gt "1" ]; then
    echo "Ambiguous matches, please provide a more specific query. Found:" >&2
    echo "$matches" >&2
    exit 1
  fi
}

case "$1" in
  "") echo $ROOT_DIR ;;
  *)  find_path "$@" ;;
esac
