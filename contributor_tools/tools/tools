#!/bin/bash -e
#
# Copyright 2016-present The Material Motion Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cmd=$(basename "${BASH_SOURCE[0]}" | rev | cut -d'.' -f2- | rev)
dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

OPERATION="$1"

instructions() {
  tool="$1"
  echo
  echo "${B}Installation instructions${N}"
  echo
  # Underline content between <> marks
  sed -e "s:\(<\([a-zA-Z0-9 /]*\)>\):${N}${U}\2${N}:g" "$dir/installers/$tool.md" | \
    # Bold content between `` marks
    perl -pe "s:(\`(.+?)\`):${B}\2${N}:g" | \
    # Replace instances of "$installer_path" with the installer's path.
    sed -e "s:\$installer_path:$dir/installers:"
  echo
}

missing_tool() {
  tool="$1"
  echo "☐ ${B}$tool${N}"

  if [ "$OPERATION" == "status" ]; then
    return
  fi

  if [ "$OPERATION" == "install" ]; then
    "$dir/installers/$tool.installer"
  else
    instructions $tool
  fi
}

found_tool() {
  tool="$1"
  echo "✓ ${B}$tool${N}"
}

check_tool() {
  tool="$1"
  if which $tool >> /dev/null; then
    found_tool $tool
  else
    missing_tool $tool
  fi
}

check_all_tools() {
  pushd $ROOT_DIR >> /dev/null
  echo "Updating submodules..."
  git submodule update --init --recursive
  popd >> /dev/null

  check_tool arc

  if [ "$(uname)" == "Darwin" ]; then
    check_tool brew
  fi

  check_tool node

  if [ ! -d "$ROOT_DIR/third_party/gh/node_modules" ]; then
    missing_tool gh
  else
    found_tool gh
  fi

  check_tool yo
  check_tool pip
  check_tool proselint

  if [ "$(uname)" == "Darwin" ]; then
    check_tool clang-format
    check_tool pod
    check_tool sourcekitten
  fi

  for file in $ROOT_DIR/generators/*; do
    name=$( basename "$file" | sed "s/generator-//" )
    if [[ ! $( yo --generators | grep "^ *$name$" ) ]]; then
      echo "☐ ${B}yo $name${N}"

      if [ "$OPERATION" == "status" ]; then
        continue
      fi

      if [ "$OPERATION" == "install" ]; then
        cd $file
        npm install
        echo "Linking $(basename $file) for yo..."
        npm link
      else
        echo "Please run the following:"
        echo
        echo "    cd $file"
        echo "    npm install"
        echo "    npm link"
      fi
    else
      echo "✓ ${B}yo $name${N}"
    fi
  done
}

check_all_tools "${@:2}"
